// Code generated by MockGen. DO NOT EDIT.
// Source: payment_gateway/internal/bank (interfaces: BankService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	bank "payment_gateway/internal/bank"
	payment "payment_gateway/internal/payment"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBankService is a mock of BankService interface.
type MockBankService struct {
	ctrl     *gomock.Controller
	recorder *MockBankServiceMockRecorder
}

// MockBankServiceMockRecorder is the mock recorder for MockBankService.
type MockBankServiceMockRecorder struct {
	mock *MockBankService
}

// NewMockBankService creates a new mock instance.
func NewMockBankService(ctrl *gomock.Controller) *MockBankService {
	mock := &MockBankService{ctrl: ctrl}
	mock.recorder = &MockBankServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankService) EXPECT() *MockBankServiceMockRecorder {
	return m.recorder
}

// ProcessPayment mocks base method.
func (m *MockBankService) ProcessPayment(arg0 context.Context, arg1 *payment.Payment) (*bank.BankResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessPayment", arg0, arg1)
	ret0, _ := ret[0].(*bank.BankResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessPayment indicates an expected call of ProcessPayment.
func (mr *MockBankServiceMockRecorder) ProcessPayment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessPayment", reflect.TypeOf((*MockBankService)(nil).ProcessPayment), arg0, arg1)
}
